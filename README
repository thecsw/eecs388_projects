		       _________________________

			SELECTED FINAL PROJECTS
			    Embedded Systems

			     Sandy Urazayev
			       ctu@ku.edu
		       _________________________





1 Anti-collision Blinker Car
============================

  by *Jonelle Gamble* and *Abdoul Diallo*


1.1 Motivation
~~~~~~~~~~~~~~

  One of the main motivations while doing this lab was to put our
  knowledge of programming into practice. We learned some C programming
  during lectures, that added to prior knowledge of C++, and it was a
  fun project to work on. We were able to see our code’s effects not
  only through monitors but making an object move/stop (the
  car). Another thing is that we learned a lot while doing this project,
  because we had to deal with many areas, we had not been exposed to
  prior to taking this class.


1.2 Design
~~~~~~~~~~

  We initially thought, for the reverse function of the car, we only had
  to set the speed to reverse to get it to work properly. For the
  anti-collision, our initial thoughts were to write code similar to lab
  3 that gets information form the lidar sensor. However, instead of
  changing the light on the HiFive Board, we would call the stop car
  function when an object is detected 75cm away. Lastly, our initial
  thoughts for blinker lights were to put together what we learned in
  lab 4 and 5 where we blinked lights different colors and used
  interrupts. We also knew that we would need an if statement to check
  whether the steering was turning right or left (-45 to 0 or 0 to 45
  degrees) and change the color of the light accordingly.


1.3 Implementation
~~~~~~~~~~~~~~~~~~

  We changed the reverse function to match the graph that was shown by
  the TAs, because the reverse option of the cars are locked when they
  go forward. We implemented something called a double click to decrease
  the speed of the car slowly to the reverse, then back to neutral,
  before setting it slowly to the reverse speed again. The hardship
  encountered while testing the reverse function is that the cars needed
  to be calibrated at start. The last speed run by car before it turns
  off is set as the neutral on the next start. As for the Lidar, our
  initial thoughts were correct. However, we spent some time trying to
  set up the UARTS on the HiFive, since one was used by the Pi
  already. The pins were also inverted on the board for the
  connections. Moreover, the delays in the main function made it so the
  Lidar was sending information later than it should for the car to stop
  at the right moment. The blinker also complained because of delays and
  the position of the code for the interrupts inside the main function
  mattered. We made it work by updating a variable which handled the led
  index to turn on according to the degree of the steering angle. We
  also had to remove and put back the code for a version specification
  in the Pi, because the Raspberry Pis have different software
  versions. We wanted to implement a remote controller with Bluetooth,
  but we couldn’t get a controller.


1.4 Results
~~~~~~~~~~~

  Our code worked when we showed it to TAs during lab, however, when
  demoing it we had to change the code to make the camera work, because
  we were given a car with a different OS version for the Pi. We also
  needed to add delays in so that the TAs could calibrate the car before
  it starts running. For the results of our demo, everything worked
  correctly except our blinkers were not blinking at the correct
  rate/frequency. We think that this project was a lot more challenging
  compared to the previous labs, however, it was very rewarding due to
  the knowledge we gained.

  <file:./anticol_1.jpg>

  <file:./anticol_2.jpg>
